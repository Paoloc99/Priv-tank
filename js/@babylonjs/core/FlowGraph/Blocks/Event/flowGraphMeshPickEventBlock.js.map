{"version":3,"file":"flowGraphMeshPickEventBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Event/flowGraphMeshPickEventBlock.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAEhE,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAC;AAIlE;;;GAGG;AACH,MAAM,OAAO,2BAA4B,SAAQ,mBAAmB;IAKhE,YAAmB,KAAgB,EAAE,UAAwB;QACzD,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAED,IAAW,UAAU,CAAC,IAAkB;QACpC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,MAAM,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC9C,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;SACJ;IACL,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;OAEG;IACI,eAAe;QAClB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;;gBACzF,IAAI,WAAW,CAAC,IAAI,KAAK,iBAAiB,CAAC,WAAW,IAAI,CAAA,MAAA,WAAW,CAAC,QAAQ,0CAAE,UAAU,MAAK,IAAI,CAAC,WAAW,EAAE;oBAC7G,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACnB;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SACrG;IACL,CAAC;IAED;;OAEG;IACI,cAAc;QACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/E,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;IACrC,CAAC;CACJ","sourcesContent":["import type { Observer } from \"../../../Misc/observable\";\r\nimport type { AbstractMesh } from \"../../../Meshes/abstractMesh\";\r\nimport type { FlowGraph } from \"../../flowGraph\";\r\nimport { FlowGraphEventBlock } from \"../../flowGraphEventBlock\";\r\nimport type { PointerInfo } from \"../../../Events/pointerEvents\";\r\nimport { PointerEventTypes } from \"../../../Events/pointerEvents\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport type { Node } from \"../../../node\";\r\n\r\n/**\r\n * @experimental\r\n * A block that activates when a mesh is picked.\r\n */\r\nexport class FlowGraphMeshPickEventBlock extends FlowGraphEventBlock {\r\n    private _meshToPick: AbstractMesh;\r\n    private _meshPickObserver: Nullable<Observer<PointerInfo>>;\r\n    private _meshDisposeObserver: Nullable<Observer<Node>>;\r\n\r\n    public constructor(graph: FlowGraph, meshToPick: AbstractMesh) {\r\n        super(graph);\r\n        this._meshToPick = meshToPick;\r\n    }\r\n\r\n    public set meshToPick(mesh: AbstractMesh) {\r\n        if (this._meshToPick !== mesh) {\r\n            const wasListening = !!this._meshPickObserver;\r\n            if (wasListening) {\r\n                this._stopListening();\r\n            }\r\n            this._meshToPick = mesh;\r\n            if (wasListening) {\r\n                this._startListening();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get meshToPick(): AbstractMesh {\r\n        return this._meshToPick;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _startListening(): void {\r\n        if (!this._meshPickObserver) {\r\n            this._meshPickObserver = this._meshToPick.getScene().onPointerObservable.add((pointerInfo) => {\r\n                if (pointerInfo.type === PointerEventTypes.POINTERPICK && pointerInfo.pickInfo?.pickedMesh === this._meshToPick) {\r\n                    this._execute();\r\n                }\r\n            });\r\n            this._meshDisposeObserver = this._meshToPick.onDisposeObservable.add(() => this._stopListening());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _stopListening(): void {\r\n        this._meshToPick.getScene().onPointerObservable.remove(this._meshPickObserver);\r\n        this._meshPickObserver = null;\r\n        this._meshToPick.onDisposeObservable.remove(this._meshDisposeObserver);\r\n        this._meshDisposeObserver = null;\r\n    }\r\n}\r\n"]}