{"version":3,"file":"flowGraphForLoopBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Execution/flowGraphForLoopBlock.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,iCAAiC,EAAE,mDAAyD;AAErG;;;GAGG;AACH,MAAM,OAAO,qBAAsB,SAAQ,iCAAiC;IA8BxE,YAAmB,KAAgB;QAC/B,KAAK,CAAC,KAAK,CAAC,CAAC;QALT,kBAAa,GAAW,CAAC,CAAC;QAC1B,oBAAe,GAAW,CAAC,CAAC;QAC5B,gBAAW,GAAW,CAAC,CAAC;QAK5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAE/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAEO,YAAY;QAChB,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,EAAE;YAC3C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;YAC9B,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;SACjC;IACL,CAAC;IAED;;OAEG;IACI,QAAQ;QACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;CACJ","sourcesContent":["import type { FlowGraph } from \"../../flowGraph\";\r\nimport type { FlowGraphSignalConnection } from \"../../flowGraphSignalConnection\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { FlowGraphWithOnDoneExecutionBlock } from \"core/FlowGraph/flowGraphWithOnDoneExecutionBlock\";\r\n\r\n/**\r\n * @experimental\r\n * Block that executes a loop.\r\n */\r\nexport class FlowGraphForLoopBlock extends FlowGraphWithOnDoneExecutionBlock {\r\n    /**\r\n     * The start index of the loop.\r\n     */\r\n    public readonly startIndex: FlowGraphDataConnection<number>;\r\n    /**\r\n     * The end index of the loop.\r\n     */\r\n    public readonly endIndex: FlowGraphDataConnection<number>;\r\n    /**\r\n     * The step of the loop.\r\n     */\r\n    public readonly step: FlowGraphDataConnection<number>;\r\n    /**\r\n     * The current index of the loop.\r\n     */\r\n    public readonly index: FlowGraphDataConnection<number>;\r\n    /**\r\n     * The signal that is activated when the loop body is executed.\r\n     */\r\n    public readonly onLoop: FlowGraphSignalConnection;\r\n    /**\r\n     * The signal that is activated when the loop is done.\r\n     */\r\n    public readonly onDone: FlowGraphSignalConnection;\r\n\r\n    private _currentIndex: number = 0;\r\n    private _cachedEndIndex: number = 0;\r\n    private _cachedStep: number = 0;\r\n\r\n    public constructor(graph: FlowGraph) {\r\n        super(graph);\r\n\r\n        this.startIndex = this._registerDataInput(\"startIndex\", 0);\r\n        this.endIndex = this._registerDataInput(\"endIndex\", 0);\r\n        this.step = this._registerDataInput(\"step\", 1);\r\n\r\n        this.index = this._registerDataOutput(\"index\", 0);\r\n        this.onLoop = this._registerSignalOutput(\"onLoop\");\r\n        this.onDone = this._registerSignalOutput(\"onDone\");\r\n    }\r\n\r\n    private _executeLoop() {\r\n        if (this._currentIndex < this._cachedEndIndex) {\r\n            this.index.value = this._currentIndex;\r\n            this.onLoop._activateSignal();\r\n            this._currentIndex += this._cachedStep;\r\n            this._executeLoop();\r\n        } else {\r\n            this.onDone._activateSignal();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _execute(): void {\r\n        this._currentIndex = this.startIndex.value;\r\n        this._cachedEndIndex = this.endIndex.value;\r\n        this._cachedStep = this.step.value;\r\n        this._executeLoop();\r\n    }\r\n}\r\n"]}